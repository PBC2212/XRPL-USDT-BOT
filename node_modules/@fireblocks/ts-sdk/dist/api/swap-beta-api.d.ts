/**
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import { RequestArgs, BaseAPI } from '../base';
import { QuoteRequest } from '../models';
import { QuoteResponse } from '../models';
import { SwapOperation } from '../models';
import { SwapOperationRequest } from '../models';
import { SwapOperationsPaginatedResponse } from '../models';
import { SwapProvider } from '../models';
import { SwapProvidersPaginatedResponse } from '../models';
/**
 * SwapBetaApi - axios parameter creator
 * @export
 */
export declare const SwapBetaApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Approve the terms of service for a swap provider. Some providers require this approval before performing a swap action for the first time.  Note: These endpoints are currently in beta and might be subject to changes.  If you want to participate and learn more about the Fireblocks Swap, please contact your Fireblocks Customer Success Manager or send an email to CSM@fireblocks.com.  Endpoint Permission: Owner, Admin, Non-Signing Admin, Signer, Editor.
     * @summary Approve terms of service
     * @param {string} providerId
     * @param {string} [idempotencyKey] A unique identifier for the request. If the request is sent multiple times with the same idempotency key, the server will return the same response as the first request. The idempotency key is valid for 24 hours.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    approveTermsOfService: (providerId: string, idempotencyKey?: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Create a quote from specific swap provider.  Note: These endpoints are currently in beta and might be subject to changes.  If you want to participate and learn more about the Fireblocks Swap, please contact your Fireblocks Customer Success Manager or send an email to CSM@fireblocks.com.  Endpoint Permission: Owner, Admin, Non-Signing Admin, Signer, Approver, Editor, Viewer.
     * @summary Create a quote
     * @param {QuoteRequest} quoteRequest
     * @param {string} providerId
     * @param {string} [idempotencyKey] A unique identifier for the request. If the request is sent multiple times with the same idempotency key, the server will return the same response as the first request. The idempotency key is valid for 24 hours.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createQuote: (quoteRequest: QuoteRequest, providerId: string, idempotencyKey?: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Create swap operation based on a provided quote Id  Note: These endpoints are currently in beta and might be subject to changes.  If you want to participate and learn more about the Fireblocks Swap, please contact your Fireblocks Customer Success Manager or send an email to CSM@fireblocks.com.  Endpoint Permission: Owner, Admin, Non-Signing Admin, Signer, Editor.
     * @summary Create swap operation
     * @param {SwapOperationRequest} swapOperationRequest
     * @param {string} [idempotencyKey] A unique identifier for the request. If the request is sent multiple times with the same idempotency key, the server will return the same response as the first request. The idempotency key is valid for 24 hours.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createSwapOperation: (swapOperationRequest: SwapOperationRequest, idempotencyKey?: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get swap operation Details by ID.  Note:These endpoints are currently in beta and might be subject to changes.  If you want to participate and learn more about the Fireblocks Swap, please contact your Fireblocks Customer Success Manager or send an email to CSM@fireblocks.com.  Endpoint Permission: Owner, Admin, Non-Signing Admin, Signer, Approver, Editor, Viewer.
     * @summary Get operation details
     * @param {string} operationId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSwapOperationById: (operationId: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Return a list of swap operations for the specific workspace The operations are sorted by creation date in descending order, meaning the most recent operation appears first.  Note:These endpoints are currently in beta and might be subject to changes.  If you want to participate and learn more about the Fireblocks TAP, please contact your Fireblocks Customer Success Manager or send an email to CSM@fireblocks.com.  Endpoint Permission: Owner, Admin, Non-Signing Admin, Signer, Approver, Editor, Viewer.
     * @summary Get Operations list
     * @param {string} [pageCursor] Cursor of the required page
     * @param {number} [pageSize] Number of items in a page, Acceptable values are 1-100. Maximum value is 100
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSwapOperations: (pageCursor?: string, pageSize?: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Return a list of all supported swap providers.  Note: These endpoints are currently in beta and might be subject to changes.  If you want to participate and learn more about the Fireblocks Swap, please contact your Fireblocks Customer Success Manager or send an email to CSM@fireblocks.com.  Endpoint Permission: Owner, Admin, Non-Signing Admin, Signer, Approver, Editor, Viewer.
     * @summary Get Providers List
     * @param {string} [pageCursor] Cursor of the required page
     * @param {number} [pageSize] Number of items in a page, Acceptable values are 1-100. Maximum value is 100
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSwapProviders: (pageCursor?: string, pageSize?: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * SwapBetaApi - functional programming interface
 * @export
 */
export declare const SwapBetaApiFp: (configuration?: Configuration) => {
    /**
     * Approve the terms of service for a swap provider. Some providers require this approval before performing a swap action for the first time.  Note: These endpoints are currently in beta and might be subject to changes.  If you want to participate and learn more about the Fireblocks Swap, please contact your Fireblocks Customer Success Manager or send an email to CSM@fireblocks.com.  Endpoint Permission: Owner, Admin, Non-Signing Admin, Signer, Editor.
     * @summary Approve terms of service
     * @param {string} providerId
     * @param {string} [idempotencyKey] A unique identifier for the request. If the request is sent multiple times with the same idempotency key, the server will return the same response as the first request. The idempotency key is valid for 24 hours.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    approveTermsOfService(providerId: string, idempotencyKey?: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SwapProvider>>;
    /**
     * Create a quote from specific swap provider.  Note: These endpoints are currently in beta and might be subject to changes.  If you want to participate and learn more about the Fireblocks Swap, please contact your Fireblocks Customer Success Manager or send an email to CSM@fireblocks.com.  Endpoint Permission: Owner, Admin, Non-Signing Admin, Signer, Approver, Editor, Viewer.
     * @summary Create a quote
     * @param {QuoteRequest} quoteRequest
     * @param {string} providerId
     * @param {string} [idempotencyKey] A unique identifier for the request. If the request is sent multiple times with the same idempotency key, the server will return the same response as the first request. The idempotency key is valid for 24 hours.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createQuote(quoteRequest: QuoteRequest, providerId: string, idempotencyKey?: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<QuoteResponse>>;
    /**
     * Create swap operation based on a provided quote Id  Note: These endpoints are currently in beta and might be subject to changes.  If you want to participate and learn more about the Fireblocks Swap, please contact your Fireblocks Customer Success Manager or send an email to CSM@fireblocks.com.  Endpoint Permission: Owner, Admin, Non-Signing Admin, Signer, Editor.
     * @summary Create swap operation
     * @param {SwapOperationRequest} swapOperationRequest
     * @param {string} [idempotencyKey] A unique identifier for the request. If the request is sent multiple times with the same idempotency key, the server will return the same response as the first request. The idempotency key is valid for 24 hours.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createSwapOperation(swapOperationRequest: SwapOperationRequest, idempotencyKey?: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SwapOperation>>;
    /**
     * Get swap operation Details by ID.  Note:These endpoints are currently in beta and might be subject to changes.  If you want to participate and learn more about the Fireblocks Swap, please contact your Fireblocks Customer Success Manager or send an email to CSM@fireblocks.com.  Endpoint Permission: Owner, Admin, Non-Signing Admin, Signer, Approver, Editor, Viewer.
     * @summary Get operation details
     * @param {string} operationId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSwapOperationById(operationId: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SwapOperation>>;
    /**
     * Return a list of swap operations for the specific workspace The operations are sorted by creation date in descending order, meaning the most recent operation appears first.  Note:These endpoints are currently in beta and might be subject to changes.  If you want to participate and learn more about the Fireblocks TAP, please contact your Fireblocks Customer Success Manager or send an email to CSM@fireblocks.com.  Endpoint Permission: Owner, Admin, Non-Signing Admin, Signer, Approver, Editor, Viewer.
     * @summary Get Operations list
     * @param {string} [pageCursor] Cursor of the required page
     * @param {number} [pageSize] Number of items in a page, Acceptable values are 1-100. Maximum value is 100
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSwapOperations(pageCursor?: string, pageSize?: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SwapOperationsPaginatedResponse>>;
    /**
     * Return a list of all supported swap providers.  Note: These endpoints are currently in beta and might be subject to changes.  If you want to participate and learn more about the Fireblocks Swap, please contact your Fireblocks Customer Success Manager or send an email to CSM@fireblocks.com.  Endpoint Permission: Owner, Admin, Non-Signing Admin, Signer, Approver, Editor, Viewer.
     * @summary Get Providers List
     * @param {string} [pageCursor] Cursor of the required page
     * @param {number} [pageSize] Number of items in a page, Acceptable values are 1-100. Maximum value is 100
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSwapProviders(pageCursor?: string, pageSize?: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SwapProvidersPaginatedResponse>>;
};
/**
 * SwapBetaApi - factory interface
 * @export
 */
export declare const SwapBetaApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Approve the terms of service for a swap provider. Some providers require this approval before performing a swap action for the first time.  Note: These endpoints are currently in beta and might be subject to changes.  If you want to participate and learn more about the Fireblocks Swap, please contact your Fireblocks Customer Success Manager or send an email to CSM@fireblocks.com.  Endpoint Permission: Owner, Admin, Non-Signing Admin, Signer, Editor.
     * @summary Approve terms of service
     * @param {SwapBetaApiApproveTermsOfServiceRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    approveTermsOfService(requestParameters: SwapBetaApiApproveTermsOfServiceRequest, options?: RawAxiosRequestConfig): AxiosPromise<SwapProvider>;
    /**
     * Create a quote from specific swap provider.  Note: These endpoints are currently in beta and might be subject to changes.  If you want to participate and learn more about the Fireblocks Swap, please contact your Fireblocks Customer Success Manager or send an email to CSM@fireblocks.com.  Endpoint Permission: Owner, Admin, Non-Signing Admin, Signer, Approver, Editor, Viewer.
     * @summary Create a quote
     * @param {SwapBetaApiCreateQuoteRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createQuote(requestParameters: SwapBetaApiCreateQuoteRequest, options?: RawAxiosRequestConfig): AxiosPromise<QuoteResponse>;
    /**
     * Create swap operation based on a provided quote Id  Note: These endpoints are currently in beta and might be subject to changes.  If you want to participate and learn more about the Fireblocks Swap, please contact your Fireblocks Customer Success Manager or send an email to CSM@fireblocks.com.  Endpoint Permission: Owner, Admin, Non-Signing Admin, Signer, Editor.
     * @summary Create swap operation
     * @param {SwapBetaApiCreateSwapOperationRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createSwapOperation(requestParameters: SwapBetaApiCreateSwapOperationRequest, options?: RawAxiosRequestConfig): AxiosPromise<SwapOperation>;
    /**
     * Get swap operation Details by ID.  Note:These endpoints are currently in beta and might be subject to changes.  If you want to participate and learn more about the Fireblocks Swap, please contact your Fireblocks Customer Success Manager or send an email to CSM@fireblocks.com.  Endpoint Permission: Owner, Admin, Non-Signing Admin, Signer, Approver, Editor, Viewer.
     * @summary Get operation details
     * @param {SwapBetaApiGetSwapOperationByIdRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSwapOperationById(requestParameters: SwapBetaApiGetSwapOperationByIdRequest, options?: RawAxiosRequestConfig): AxiosPromise<SwapOperation>;
    /**
     * Return a list of swap operations for the specific workspace The operations are sorted by creation date in descending order, meaning the most recent operation appears first.  Note:These endpoints are currently in beta and might be subject to changes.  If you want to participate and learn more about the Fireblocks TAP, please contact your Fireblocks Customer Success Manager or send an email to CSM@fireblocks.com.  Endpoint Permission: Owner, Admin, Non-Signing Admin, Signer, Approver, Editor, Viewer.
     * @summary Get Operations list
     * @param {SwapBetaApiGetSwapOperationsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSwapOperations(requestParameters?: SwapBetaApiGetSwapOperationsRequest, options?: RawAxiosRequestConfig): AxiosPromise<SwapOperationsPaginatedResponse>;
    /**
     * Return a list of all supported swap providers.  Note: These endpoints are currently in beta and might be subject to changes.  If you want to participate and learn more about the Fireblocks Swap, please contact your Fireblocks Customer Success Manager or send an email to CSM@fireblocks.com.  Endpoint Permission: Owner, Admin, Non-Signing Admin, Signer, Approver, Editor, Viewer.
     * @summary Get Providers List
     * @param {SwapBetaApiGetSwapProvidersRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSwapProviders(requestParameters?: SwapBetaApiGetSwapProvidersRequest, options?: RawAxiosRequestConfig): AxiosPromise<SwapProvidersPaginatedResponse>;
};
/**
 * Request parameters for approveTermsOfService operation in SwapBetaApi.
 * @export
 * @interface SwapBetaApiApproveTermsOfServiceRequest
 */
export interface SwapBetaApiApproveTermsOfServiceRequest {
    /**
     *
     * @type {string}
     * @memberof SwapBetaApiApproveTermsOfService
     */
    readonly providerId: string;
    /**
     * A unique identifier for the request. If the request is sent multiple times with the same idempotency key, the server will return the same response as the first request. The idempotency key is valid for 24 hours.
     * @type {string}
     * @memberof SwapBetaApiApproveTermsOfService
     */
    readonly idempotencyKey?: string;
}
/**
 * Request parameters for createQuote operation in SwapBetaApi.
 * @export
 * @interface SwapBetaApiCreateQuoteRequest
 */
export interface SwapBetaApiCreateQuoteRequest {
    /**
     *
     * @type {QuoteRequest}
     * @memberof SwapBetaApiCreateQuote
     */
    readonly quoteRequest: QuoteRequest;
    /**
     *
     * @type {string}
     * @memberof SwapBetaApiCreateQuote
     */
    readonly providerId: string;
    /**
     * A unique identifier for the request. If the request is sent multiple times with the same idempotency key, the server will return the same response as the first request. The idempotency key is valid for 24 hours.
     * @type {string}
     * @memberof SwapBetaApiCreateQuote
     */
    readonly idempotencyKey?: string;
}
/**
 * Request parameters for createSwapOperation operation in SwapBetaApi.
 * @export
 * @interface SwapBetaApiCreateSwapOperationRequest
 */
export interface SwapBetaApiCreateSwapOperationRequest {
    /**
     *
     * @type {SwapOperationRequest}
     * @memberof SwapBetaApiCreateSwapOperation
     */
    readonly swapOperationRequest: SwapOperationRequest;
    /**
     * A unique identifier for the request. If the request is sent multiple times with the same idempotency key, the server will return the same response as the first request. The idempotency key is valid for 24 hours.
     * @type {string}
     * @memberof SwapBetaApiCreateSwapOperation
     */
    readonly idempotencyKey?: string;
}
/**
 * Request parameters for getSwapOperationById operation in SwapBetaApi.
 * @export
 * @interface SwapBetaApiGetSwapOperationByIdRequest
 */
export interface SwapBetaApiGetSwapOperationByIdRequest {
    /**
     *
     * @type {string}
     * @memberof SwapBetaApiGetSwapOperationById
     */
    readonly operationId: string;
}
/**
 * Request parameters for getSwapOperations operation in SwapBetaApi.
 * @export
 * @interface SwapBetaApiGetSwapOperationsRequest
 */
export interface SwapBetaApiGetSwapOperationsRequest {
    /**
     * Cursor of the required page
     * @type {string}
     * @memberof SwapBetaApiGetSwapOperations
     */
    readonly pageCursor?: string;
    /**
     * Number of items in a page, Acceptable values are 1-100. Maximum value is 100
     * @type {number}
     * @memberof SwapBetaApiGetSwapOperations
     */
    readonly pageSize?: number;
}
/**
 * Request parameters for getSwapProviders operation in SwapBetaApi.
 * @export
 * @interface SwapBetaApiGetSwapProvidersRequest
 */
export interface SwapBetaApiGetSwapProvidersRequest {
    /**
     * Cursor of the required page
     * @type {string}
     * @memberof SwapBetaApiGetSwapProviders
     */
    readonly pageCursor?: string;
    /**
     * Number of items in a page, Acceptable values are 1-100. Maximum value is 100
     * @type {number}
     * @memberof SwapBetaApiGetSwapProviders
     */
    readonly pageSize?: number;
}
/**
 * SwapBetaApi - object-oriented interface
 * @export
 * @class SwapBetaApi
 * @extends {BaseAPI}
 */
export declare class SwapBetaApi extends BaseAPI {
    /**
     * Approve the terms of service for a swap provider. Some providers require this approval before performing a swap action for the first time.  Note: These endpoints are currently in beta and might be subject to changes.  If you want to participate and learn more about the Fireblocks Swap, please contact your Fireblocks Customer Success Manager or send an email to CSM@fireblocks.com.  Endpoint Permission: Owner, Admin, Non-Signing Admin, Signer, Editor.
     * @summary Approve terms of service
     * @param {SwapBetaApiApproveTermsOfServiceRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SwapBetaApi
     */
    approveTermsOfService(requestParameters: SwapBetaApiApproveTermsOfServiceRequest): Promise<import("../response/fireblocksResponse").FireblocksResponse<SwapProvider>>;
    /**
     * Create a quote from specific swap provider.  Note: These endpoints are currently in beta and might be subject to changes.  If you want to participate and learn more about the Fireblocks Swap, please contact your Fireblocks Customer Success Manager or send an email to CSM@fireblocks.com.  Endpoint Permission: Owner, Admin, Non-Signing Admin, Signer, Approver, Editor, Viewer.
     * @summary Create a quote
     * @param {SwapBetaApiCreateQuoteRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SwapBetaApi
     */
    createQuote(requestParameters: SwapBetaApiCreateQuoteRequest): Promise<import("../response/fireblocksResponse").FireblocksResponse<QuoteResponse>>;
    /**
     * Create swap operation based on a provided quote Id  Note: These endpoints are currently in beta and might be subject to changes.  If you want to participate and learn more about the Fireblocks Swap, please contact your Fireblocks Customer Success Manager or send an email to CSM@fireblocks.com.  Endpoint Permission: Owner, Admin, Non-Signing Admin, Signer, Editor.
     * @summary Create swap operation
     * @param {SwapBetaApiCreateSwapOperationRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SwapBetaApi
     */
    createSwapOperation(requestParameters: SwapBetaApiCreateSwapOperationRequest): Promise<import("../response/fireblocksResponse").FireblocksResponse<SwapOperation>>;
    /**
     * Get swap operation Details by ID.  Note:These endpoints are currently in beta and might be subject to changes.  If you want to participate and learn more about the Fireblocks Swap, please contact your Fireblocks Customer Success Manager or send an email to CSM@fireblocks.com.  Endpoint Permission: Owner, Admin, Non-Signing Admin, Signer, Approver, Editor, Viewer.
     * @summary Get operation details
     * @param {SwapBetaApiGetSwapOperationByIdRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SwapBetaApi
     */
    getSwapOperationById(requestParameters: SwapBetaApiGetSwapOperationByIdRequest): Promise<import("../response/fireblocksResponse").FireblocksResponse<SwapOperation>>;
    /**
     * Return a list of swap operations for the specific workspace The operations are sorted by creation date in descending order, meaning the most recent operation appears first.  Note:These endpoints are currently in beta and might be subject to changes.  If you want to participate and learn more about the Fireblocks TAP, please contact your Fireblocks Customer Success Manager or send an email to CSM@fireblocks.com.  Endpoint Permission: Owner, Admin, Non-Signing Admin, Signer, Approver, Editor, Viewer.
     * @summary Get Operations list
     * @param {SwapBetaApiGetSwapOperationsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SwapBetaApi
     */
    getSwapOperations(requestParameters?: SwapBetaApiGetSwapOperationsRequest): Promise<import("../response/fireblocksResponse").FireblocksResponse<SwapOperationsPaginatedResponse>>;
    /**
     * Return a list of all supported swap providers.  Note: These endpoints are currently in beta and might be subject to changes.  If you want to participate and learn more about the Fireblocks Swap, please contact your Fireblocks Customer Success Manager or send an email to CSM@fireblocks.com.  Endpoint Permission: Owner, Admin, Non-Signing Admin, Signer, Approver, Editor, Viewer.
     * @summary Get Providers List
     * @param {SwapBetaApiGetSwapProvidersRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SwapBetaApi
     */
    getSwapProviders(requestParameters?: SwapBetaApiGetSwapProvidersRequest): Promise<import("../response/fireblocksResponse").FireblocksResponse<SwapProvidersPaginatedResponse>>;
}
